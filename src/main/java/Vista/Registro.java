package Vista;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import java.time.LocalDate;
import java.util.Arrays;

public class Registro extends javax.swing.JFrame {

    public Registro() {
        initComponents();
        verificarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */// Método para inicializar los componentes relacionados con la fecha de nacimiento
    /*private void fechaNac() {
        // Agrega un listener para cada JComboBox
        cmbDia.addActionListener(e -> obtenerEdad());
        cmbMes.addActionListener(e -> obtenerEdad());
        cmbAnio.addActionListener(e -> obtenerEdad());
    }*/
    private void verificarCampos() {
        // Verificar que todos los campos estén llenos y cumplan con los criterios de validación
        boolean nombreUsuarioValido = txtNombreUsuario.getText().trim().length() >= 8;
        boolean nombreApellidoValido = !txtNombreApellido.getText().trim().isEmpty();
        boolean dniValido = validarDni(txtDni.getText().trim());
        boolean fechaValida = validarFecha();
        boolean correoValido = validarCorreo(txtCorreoR.getText().trim());
        boolean contraValida = validarContrasena(new String(pswContraR.getPassword()));
        boolean contraRValida = Arrays.equals(pswContraR.getPassword(), pswContra2R.getPassword());
        boolean direccionValida = txtDireccion.getText().trim().length() >= 20;

        //habilitar el botón de registro
        btnRegistrate.setEnabled(nombreUsuarioValido && nombreApellidoValido && dniValido && fechaValida
                && correoValido && contraValida && contraRValida && direccionValida);

        /* if (nombreUsuarioValido && nombreApellidoValido && dniValido && fechaValida
                && correoValido && contraValida && contraRValida && direccionValida) {
            btnRegistrateActionPerformed(JOptionPane.showMessageDialog(null, "Se ha registrado exitosamente, proceda a iniciar sesión con sus credenciales", 
                    "Registro", JOptionPane.INFORMATION_MESSAGE));
            }*/
    }

    private boolean validarDni(String dni) {
        if (dni.length() != 8) {
            return false;
        }
        char primerDigito = dni.charAt(0);
        if (primerDigito != '7' && primerDigito != '1' && primerDigito != '0') {
            return false;
        }
        for (int i = 1; i < dni.length(); i++) {
            if (!Character.isDigit(dni.charAt(i))) {
                return false;
            }
        }
        return true;

    }

    private int obtenerEdad() {

        String diaStr = txtDia.getText();
        String mesStr = txtMes.getText();
        String anioStr = txtAnio.getText();

        if (diaStr.isEmpty() || mesStr.isEmpty() || anioStr.isEmpty()) {
            //si estan vacios error
            return -1; //indico error
        }

        int dia = Integer.parseInt(diaStr);
        int mes = Integer.parseInt(mesStr);
        int anio = Integer.parseInt(anioStr);

        LocalDate fechaNacimiento = LocalDate.of(anio, mes, dia);// fechanac
        LocalDate fechaActual = LocalDate.now(); //fecha actual

        int edad = fechaActual.getYear() - fechaNacimiento.getYear();//calculaedad actual

        if (fechaNacimiento.plusYears(edad).isAfter(fechaActual)) { //ajuste por mes o dia
            edad--;
        }

        if (edad >= 0) {
            txtEdad.setText("Edad: " + edad + " años");
        } else {
            txtEdad.setText("Error en la fecha de nacimiento");
        }

        return edad;
    }

    private boolean validarFecha() {
        int edad = obtenerEdad();
        return edad >= 18 && edad <= 85 && edad != -1; // validacioens
    }

    private boolean validarCorreo(String correo) {
        return correo.matches("[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}");
    }

    private boolean validarContrasena(String contrasena) {
        // al menos una letra mayúscula, una minúscula y un digito y 8 carcaaterees
        String regex = "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z]).{8,}$";
        return contrasena.matches(regex);
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtEdad = new javax.swing.JTextField();
        txtCorreoR = new javax.swing.JTextField();
        txtNombreApellido = new javax.swing.JTextField();
        pswContra2R = new javax.swing.JPasswordField();
        btnRegistrate = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtNombreUsuario = new javax.swing.JTextField();
        pswContraR = new javax.swing.JPasswordField();
        txtDni = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtDia = new javax.swing.JTextField();
        txtMes = new javax.swing.JTextField();
        txtAnio = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        txtEdad.setBorder(javax.swing.BorderFactory.createTitledBorder("Edad"));
        txtEdad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEdadActionPerformed(evt);
            }
        });
        txtEdad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEdadKeyPressed(evt);
            }
        });

        txtCorreoR.setBorder(javax.swing.BorderFactory.createTitledBorder("Correo"));
        txtCorreoR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorreoRActionPerformed(evt);
            }
        });
        txtCorreoR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCorreoRKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCorreoRKeyReleased(evt);
            }
        });

        txtNombreApellido.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre y Apellido"));
        txtNombreApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreApellidoActionPerformed(evt);
            }
        });
        txtNombreApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreApellidoKeyPressed(evt);
            }
        });

        pswContra2R.setBorder(javax.swing.BorderFactory.createTitledBorder("Repita Contraseña"));
        pswContra2R.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pswContra2RKeyPressed(evt);
            }
        });

        btnRegistrate.setBackground(new java.awt.Color(255, 204, 102));
        btnRegistrate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRegistrate.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrate.setText("Registrar Usuario");
        btnRegistrate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistrateMouseClicked(evt);
            }
        });
        btnRegistrate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrateActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 204, 102));

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("R E G I S T R O");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(328, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(280, 280, 280))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 204, 102));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 749, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 52, Short.MAX_VALUE)
        );

        txtNombreUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre de usuario"));
        txtNombreUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreUsuarioActionPerformed(evt);
            }
        });
        txtNombreUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreUsuarioKeyPressed(evt);
            }
        });

        pswContraR.setBorder(javax.swing.BorderFactory.createTitledBorder("Contraseña"));
        pswContraR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pswContraRKeyPressed(evt);
            }
        });

        txtDni.setBorder(javax.swing.BorderFactory.createTitledBorder("Dni"));
        txtDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDniActionPerformed(evt);
            }
        });
        txtDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDniKeyPressed(evt);
            }
        });

        txtDireccion.setBorder(javax.swing.BorderFactory.createTitledBorder("Direccion"));
        txtDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionActionPerformed(evt);
            }
        });
        txtDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDireccionKeyPressed(evt);
            }
        });

        txtDia.setBorder(javax.swing.BorderFactory.createTitledBorder("Día"));

        txtMes.setBorder(javax.swing.BorderFactory.createTitledBorder("Mes"));

        txtAnio.setBorder(javax.swing.BorderFactory.createTitledBorder("Año"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNombreApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(txtDia, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCorreoR, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pswContraR, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pswContra2R, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegistrate, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtNombreApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtCorreoR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pswContraR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pswContra2R, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegistrate, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtEdadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEdadActionPerformed

    }//GEN-LAST:event_txtEdadActionPerformed

    private void txtCorreoRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorreoRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoRActionPerformed

    private void txtNombreApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreApellidoActionPerformed

    private void txtNombreUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreUsuarioActionPerformed

    private void txtNombreUsuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreUsuarioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            // Validar el nombre de usuario
            String nombreUsuario = txtNombreUsuario.getText().trim();
            if (nombreUsuario.length() < 8) {
                JOptionPane.showMessageDialog(null, "El nombre de usuario debe tener al menos 8 caracteres.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            txtNombreApellido.requestFocus();
        }
        verificarCampos();
    }//GEN-LAST:event_txtNombreUsuarioKeyPressed

    private void btnRegistrateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrateActionPerformed
        boolean nombreUsuarioValido = txtNombreUsuario.getText().trim().length() >= 8;
        boolean nombreApellidoValido = !txtNombreApellido.getText().trim().isEmpty();
        boolean dniValido = validarDni(txtDni.getText().trim());
        boolean fechaValida = validarFecha();
        boolean correoValido = validarCorreo(txtCorreoR.getText().trim());
        boolean contraValida = validarContrasena(new String(pswContraR.getPassword()));
        boolean contraRValida = Arrays.equals(pswContraR.getPassword(), pswContra2R.getPassword());
        boolean direccionValida = txtDireccion.getText().trim().length() >= 20;

        // Habilitar el botón de registro
        boolean camposValidos = nombreUsuarioValido && nombreApellidoValido && dniValido && fechaValida
                && correoValido && contraValida && contraRValida && direccionValida;
        btnRegistrate.setEnabled(camposValidos);

        // Si todos los campos son válidos, mostrar el mensaje de registro exitoso
        if (camposValidos) {
            JOptionPane.showMessageDialog(null, "Se ha registrado exitosamente, proceda a iniciar sesión con sus credenciales",
                    "Registro", JOptionPane.INFORMATION_MESSAGE);

            Login vf = new Login();
            vf.setVisible(true);
            this.dispose();
            
        }
        else {
            JOptionPane.showMessageDialog(null, "Rellene correctamente todos los campos",
                    "Registro", JOptionPane.INFORMATION_MESSAGE);
        }
        /*this.dispose();
        Login login = new Login();
        login.setVisible(true);
        login.setLocationRelativeTo(null);*/


    }//GEN-LAST:event_btnRegistrateActionPerformed

    private void txtCorreoRKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoRKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String correo = txtCorreoR.getText().trim();
            boolean correoValido = validarCorreo(correo);
            if (!correoValido) {
                JOptionPane.showMessageDialog(null, "El correo electrónico es inválido.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            pswContraR.requestFocus();
        }
    }//GEN-LAST:event_txtCorreoRKeyPressed

    private void pswContra2RKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pswContra2RKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //contras tienen que ser iguales
            String contrasena1 = new String(pswContraR.getPassword());
            String contrasena2 = new String(pswContra2R.getPassword());
            if (!contrasena1.equals(contrasena2)) {
                JOptionPane.showMessageDialog(null, "Las contraseñas no coinciden.", "Error", JOptionPane.ERROR_MESSAGE);
                pswContraR.requestFocus();
                return;//salir si no lo son
            }
            if (!validarContrasena(contrasena1)) {
                JOptionPane.showMessageDialog(null, "La contraseña no cumple con los requisitos:\n- Al menos 8 caracteres\n- Al menos una mayúscula\n- Al menos una minúscula\n- Al menos un número", "Error", JOptionPane.ERROR_MESSAGE);
                pswContraR.requestFocus();
                return;
            }
            verificarCampos();
        }
    }//GEN-LAST:event_pswContra2RKeyPressed

    private void txtNombreApellidoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreApellidoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtDni.requestFocus();
        }
        verificarCampos();
    }//GEN-LAST:event_txtNombreApellidoKeyPressed

    private void pswContraRKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pswContraRKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String contrasena = new String(pswContraR.getPassword());
            if (!validarContrasena(contrasena)) {
                //indicaciones
                String mensaje = "La contraseña debe cumplir con los siguientes requisitos:\n"
                        + "- Al menos un número\n"
                        + "- Al menos una letra minúscula.\n"
                        + "- Al menos una letra mayúscula.\n"
                        + "- Mínimo 8 caracteres.";
                JOptionPane.showMessageDialog(null, mensaje, "Indicaciones para la contraseña", JOptionPane.INFORMATION_MESSAGE);
                pswContraR.setText(""); //limpio campo
                pswContraR.requestFocus(); //volver a ingresar
            } else {
                pswContra2R.requestFocus(); //confirmar contra
            }

            verificarCampos();
        }
    }//GEN-LAST:event_pswContraRKeyPressed

    private void txtEdadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEdadKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            txtDireccion.requestFocus();
        }
        verificarCampos();
    }//GEN-LAST:event_txtEdadKeyPressed

    private void txtCorreoRKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoRKeyReleased

    }//GEN-LAST:event_txtCorreoRKeyReleased

    private void txtDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDniActionPerformed
    private void mostrarErrorDni(String mensaje) {
        JOptionPane.showMessageDialog(null, mensaje, "DNI Inválido", JOptionPane.ERROR_MESSAGE);
    }
    private void txtDniKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDniKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String dni = txtDni.getText().trim();
            if (!validarDni(dni)) {
                if (dni.length() != 8) {
                    mostrarErrorDni("El DNI debe tener exactamente 8 dígitos.");
                } else if (!Character.isDigit(dni.charAt(0)) || (dni.charAt(0) != '7' && dni.charAt(0) != '1' && dni.charAt(0) != '0')) {
                    mostrarErrorDni("El primer dígito del DNI debe ser 7, 1 o 0.");
                } else {
                    mostrarErrorDni("El DNI debe contener solo dígitos.");
                }
                return;
            }
            txtDia.requestFocus();
        }
        verificarCampos();
    }//GEN-LAST:event_txtDniKeyPressed

    private void txtDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionActionPerformed

    private void txtDireccionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String direccion = txtDireccion.getText().trim();//obtengo correo y luego verifico
            //min 20 caracteres
            if (direccion.length() < 20) {
                JOptionPane.showMessageDialog(null, "La dirección debe tener al menos 20 caracteres.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            txtCorreoR.requestFocus();
        }
        verificarCampos();
    }//GEN-LAST:event_txtDireccionKeyPressed

    private void btnRegistrateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistrateMouseClicked

    }//GEN-LAST:event_btnRegistrateMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://downlbtnRegistratecom/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPasswordField pswContra2R;
    private javax.swing.JPasswordField pswContraR;
    private javax.swing.JTextField txtAnio;
    private javax.swing.JTextField txtCorreoR;
    private javax.swing.JTextField txtDia;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtMes;
    private javax.swing.JTextField txtNombreApellido;
    private javax.swing.JTextField txtNombreUsuario;
    // End of variables declaration//GEN-END:variables
}
